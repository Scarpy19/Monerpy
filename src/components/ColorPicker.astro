---
import { colors } from "@arrays.d.ts";
interface Props {
    id: string;
    label: string;
    checkedColor?: string;
}

const { id, label, checkedColor = "#6172f3" } = Astro.props;
---

<div>
    <label
        for="colorPicker"
        class="block text-sm font-medium text-gray-300 mb-2">{label}</label
    >
    <div class="flex items-center gap-x-3 mb-3">
        <input
            type="color"
            id="colorPicker"
            name="colorPicker"
            value={checkedColor}
            class="w-10 h-10 border border-gray-600 rounded cursor-pointer"
        />
        <input
            data-id="create"
            type="text"
            id={id}
            name="color"
            value={checkedColor}
            pattern="^#[0-9A-Fa-f]{6}$"
            class="flex-1 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
            placeholder="#6172f3"
        />
    </div>
    <div class="grid grid-cols-6 place-items-center gap-2">
        {
            colors.map((color) => (
                <button
                    data-color={color}
                    type="button"
                    class="w-8 h-8 rounded-full border-1 border-gray-600 hover:border-white transition-colors"
                    style={`background-color: ${color}`}
                />
            ))
        }
    </div>
</div>

<script>
    const colorButtons = document.querySelectorAll("button[data-color]");
    const colorPicker = document.getElementById(
        "colorPicker",
    ) as HTMLInputElement;
    const colorInput = document.querySelector(
        "input[name='color'][data-id='create']",
    ) as HTMLInputElement;

    colorButtons.forEach((button) => {
        button.addEventListener("click", function () {
            const color = button.getAttribute("data-color");
            if (color) {
                colorInput.value = color;
                colorPicker.value = color;
            }
        });
    });

    colorPicker.addEventListener("input", function () {
        colorInput.value = this.value;
    });
</script>
