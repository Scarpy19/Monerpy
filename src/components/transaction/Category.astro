---
import { actions } from "astro:actions";

interface Props {
    classes?: string;
}

const { classes } = Astro.props;

const categoriesResult = await Astro.callAction(actions.getCategories, {});

const categories = categoriesResult.data?.ok
    ? categoriesResult.data.categories
    : [];
---

<label for="categoryId" class={classes}>
    <span class="block text-sm font-medium text-gray-300 mb-2"> Category </span>
    <select
        id="categoryId"
        name="categoryId"
        class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500"
    >
        <option value="">Select a category (optional)</option>
        {
            categories &&
                categories.map((category) => (
                    <option value={category.id} data-color={category.color}>
                        {category.parent
                            ? `${category.parent.name} > ${category.name}`
                            : category.name}
                    </option>
                ))
        }
    </select>
</label>
