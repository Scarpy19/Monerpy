---
import { formatCurrency } from "@lib/date-utils.ts";
import { actions } from "astro:actions";
import Asterisk from "@comps/Asterisk.astro";

interface Props {
    id: string;
    classes?: string;
}

const accountsResult = await Astro.callAction(actions.getAccounts, {});

const accounts = accountsResult.data?.ok ? accountsResult.data.accounts : [];

const { id, classes }: Props = Astro.props;
---

<label for={id} class={classes}>
    <p class="text-sm font-medium text-gray-200 mb-2">
        Account <Asterisk id="account" />
    </p>
    <select
        id={id}
        name="accountId"
        required
        class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500"
    >
        <option value="" class="hidden">Select an account</option>
        {
            accounts &&
                accounts.map((account) => (
                    <option
                        value={account.id}
                        data-color={account.color}
                        title={formatCurrency(account.balance)}
                    >
                        {account.name} ({account.accountType})
                    </option>
                ))
        }
    </select>
</label>
