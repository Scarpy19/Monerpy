---
import Bin from "@svg/mono/Bin.astro";

interface Props {
    category: {
        id: number;
        name: string;
        color: string;
        _count?: {
            transactions?: number;
            children?: number;
        };
    };
    isChild?: boolean;
}

const { category, isChild = false } = Astro.props;

category._count = category._count || {};

category._count.children = category._count.children || 0;

const thereIsSubcategories = category._count.children > 0;
---

<div
    class={`flex items-center justify-between ${isChild ? "pl-6 px-4 py-3 border-b border-gray-500 last:border-b-0" : "p-4"}`}
>
    <div class="flex items-center gap-x-3">
        {isChild && <i class="text-gray-400">└─</i>}
        <div
            class={`rounded-full ${isChild ? "w-3 h-3" : "w-4 h-4"}`}
            style={`background-color: ${category.color}`}
        >
        </div>
        <div>
            <h3 class={`font-semibold text-white ${isChild ? "text-sm" : ""}`}>
                {category.name}
            </h3>
            <p class="text-sm text-gray-400">
                {category._count?.transactions || 0} transactions
                {
                    thereIsSubcategories && (
                        <span>• {category._count.children} subcategories</span>
                    )
                }
            </p>
        </div>
    </div>
    <div class="flex items-center gap-x-2">
        <button
            type="button"
            class="delete-category-btn group text-red-400 hover:text-red-300 transition-colors p-1 rounded hover:bg-red-900/20"
            data-category-id={category.id}
            data-category-name={category.name}
            title={`Delete ${isChild ? "Subcategory" : "Category"}`}
        >
            <Bin />
        </button>
    </div>
</div>
