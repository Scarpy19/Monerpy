---
import X from "@svg/mono/X.astro";
import ColorPicker from "../ColorPicker.astro";
---

<!-- Modal Background -->
<div
    id="tagModal"
    class="fixed inset-0 bg-black/50 z-50 hidden items-center justify-center min-h-screen p-4"
>
    <div
        class="bg-gray-800 rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto"
    >
        <!-- Modal Header -->
        <header
            class="flex items-end justify-between py-4.5 px-6 border-b border-gray-700"
        >
            <h2 class="text-xl font-semibold text-purple-400">Create Tag</h2>
            <button
                type="button"
                id="closeTagModal"
                class="text-gray-400 hover:text-white transition-colors"
            >
                <X class="w-6 h-6" />
            </button>
        </header>

        <!-- Modal Content -->
        <form method="POST" class="p-6 flex flex-col gap-y-4">
            <input type="hidden" name="_action" value="create" />

            <label>
                <span class="block text-sm font-medium text-gray-200 mb-2">
                    Tag Name
                </span>
                <input
                    type="text"
                    id="tagName"
                    name="name"
                    required
                    class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                    placeholder="Enter tag name"
                />
            </label>

            <ColorPicker id="color" formText="Tag Color" />

            <!-- Submit Buttons -->
            <div class="flex items-center justify-end gap-x-3 pt-4">
                <button
                    type="button"
                    id="cancelTagButton"
                    class="bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded text-white transition duration-200"
                >
                    Cancel
                </button>
                <button
                    type="submit"
                    class="px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded transition-colors"
                >
                    Create Tag
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const modal = document.getElementById("tagModal");
        const closeModalBtn = document.getElementById("closeTagModal");
        const cancelBtn = document.getElementById("cancelTagButton");

        // Modal controls
        function showModal() {
            if (modal) {
                modal.classList.remove("hidden");
                modal.classList.add("flex");
                document.body.style.overflow = "hidden";

                // Focus on name input
                const nameInput = modal.querySelector(
                    'input[name="name"]',
                ) as HTMLInputElement;
                nameInput?.focus();
            }
        }

        function closeModal() {
            if (modal) {
                modal.classList.add("hidden");
                document.body.style.overflow = "auto";

                // Reset form
                const form = modal.querySelector("form") as HTMLFormElement;
                if (form) {
                    form.reset();
                    // Reset to first color option (orange)
                    const firstColorRadio = form.querySelector(
                        'input[name="color"]',
                    ) as HTMLInputElement;
                    if (firstColorRadio) {
                        firstColorRadio.checked = true;
                    }
                    // Remove any custom color hidden input
                    const customColorHidden = document.getElementById(
                        "customTagColorHidden",
                    );
                    if (customColorHidden) {
                        customColorHidden.remove();
                    }
                }
            }
        }

        // Close modal events
        if (closeModalBtn) {
            closeModalBtn.addEventListener("click", closeModal);
        }

        if (cancelBtn) {
            cancelBtn.addEventListener("click", closeModal);
        }

        // Close modal when clicking outside
        if (modal) {
            modal.addEventListener("click", function (e) {
                if (e.target === modal) {
                    closeModal();
                }
            });
        }

        // Expose showModal function globally
        (window as any).openTagModal = showModal;
    });
</script>
