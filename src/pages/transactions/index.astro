---
import Layout from "@layouts/Layout.astro";
import Footer from "@comps/Footer.astro";
import LogoutScript from "@comps/LogoutScript.astro";
import Header from "@comps/Header.astro";
import TransactionModal from "@comps/TransactionModal.astro";
import ToastScript from "@comps/ToastScript.astro";
import { actions } from "astro:actions";
import {
    formatDateForDisplay,
    getDatePart,
    getTimePartWithoutSeconds,
} from "@lib/date-utils.ts";
import Loop from "@/components/svgs/mono/Loop.astro";
import Transaction from "@/components/svgs/mono/Transaction.astro";
import Plus from "@/components/svgs/mono/Plus.astro";
import CreateAccount from "@/components/CreateAccount.astro";
import JoinFamily from "@/components/JoinFamily.astro";

const user = Astro.locals.user;

if (!user) {
    return Astro.redirect("/login");
}

// Handle form submissions
let toastMessage = "";
let toastType = "success";

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("_action") as string;

    if (action === "create") {
        const result = await Astro.callAction(
            actions.createTransaction,
            formData,
        );
        console.log("Create transaction result:", result);
        if (result.data?.ok) {
            toastMessage = "Transaction created successfully!";
            toastType = "success";
        } else {
            console.error(
                "Transaction creation failed:",
                result.error || result.data?.error,
            );
            toastMessage = "Failed to create transaction. Please try again.";
            toastType = "error";
        }
    } else if (action === "update") {
        const result = await Astro.callAction(
            actions.updateTransaction,
            formData,
        );
        console.log("Update transaction result:", result);
        if (result.data?.ok) {
            toastMessage = "Transaction updated successfully!";
            toastType = "success";
        } else {
            console.error(
                "Transaction update failed:",
                result.error || result.data?.error,
            );
            toastMessage = "Failed to update transaction. Please try again.";
            toastType = "error";
        }
    } else if (action === "delete") {
        const result = await Astro.callAction(
            actions.deleteTransaction,
            formData,
        );
        console.log("Delete transaction result:", result);
        if (result.data?.ok) {
            toastMessage = "Transaction deleted successfully!";
            toastType = "success";
        } else {
            console.error(
                "Transaction deletion failed:",
                result.error || result.data?.error,
            );
            toastMessage = "Failed to delete transaction. Please try again.";
            toastType = "error";
        }
    }
}

// Check if user is in a family first
const userResult = await Astro.callAction(actions.getFamilyDetails, {});
const userInFamily = userResult.data?.ok && userResult.data.family;

// Get accounts data only if user is in a family
const accountsResult = userInFamily
    ? await Astro.callAction(actions.getAccountsList, { includeDeleted: false })
    : { data: { ok: false, accounts: [] } };
const accounts = accountsResult.data?.ok ? accountsResult.data.accounts : [];

// Get data for the page only if user has accounts
const transactionsResult =
    userInFamily && accounts && accounts.length > 0
        ? await Astro.callAction(actions.getTransactions, {
              page: 1,
              limit: 20,
          })
        : { data: { ok: false, transactions: [], pagination: null } };

const transactions = transactionsResult.data?.ok
    ? transactionsResult.data.transactions
    : [];
const pagination = transactionsResult.data?.ok
    ? transactionsResult.data.pagination
    : null;

// Group transactions by date
const groupedTransactions = (transactions || []).reduce(
    (groups, transaction) => {
        const dateKey = getDatePart(transaction.date);
        if (!groups[dateKey]) {
            groups[dateKey] = [];
        }
        groups[dateKey].push(transaction);
        return groups;
    },
    {} as { [key: string]: typeof transactions },
);

// Sort groups by date (newest first) and ensure transactions within each group are sorted by time (newest first)
const sortedGroupedTransactions = Object.keys(groupedTransactions)
    .sort((a, b) => b.localeCompare(a)) // Sort dates descending
    .map((dateKey) => ({
        date: dateKey,
        transactions: (groupedTransactions[dateKey] || []).sort((a, b) =>
            b.date.localeCompare(a.date),
        ), // Sort transactions by full datetime descending
    }));
---

<Layout title="Transactions" description="Manage your transactions">
    <main class="bg-gray-900 p-8 min-h-screen text-white">
        <Header currentPage="transactions" user={user} />
        {
            !userInFamily ? (
                <JoinFamily />
            ) : !accounts || accounts.length === 0 ? (
                <CreateAccount />
            ) : (
                <div class="bg-gray-800 shadow-lg px-6 py-6 rounded-lg mx-auto max-w-7xl">
                    <div class="flex justify-between items-center mb-6">
                        <div class="flex items-baseline-last gap-x-4">
                            <h2 class="font-semibold text-purple-400 text-xl flex items-center gap-x-2">
                                <Transaction /> Transactions
                            </h2>
                            <a
                                href="/recurring"
                                class="text-purple-400 hover:text-purple-300 flex items-center gap-x-2"
                            >
                                <Loop class="w-4 h-4" />
                                <span>Recurring</span>
                            </a>
                        </div>
                        <div class="flex gap-2">
                            <button
                                type="button"
                                id="addTransactionBtn"
                                class="bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded text-white transition duration-200"
                                title="Add a Transaction"
                            >
                                <Plus />
                            </button>
                        </div>
                    </div>

                    {!transactions || transactions.length === 0 ? (
                        <div class="text-center py-12 text-gray-400">
                            <p class="text-lg mb-2">No transactions found</p>
                            <p class="text-sm">
                                Add your first transaction to get started!
                            </p>
                        </div>
                    ) : (
                        <div class="flex flex-col gap-y-8">
                            {sortedGroupedTransactions.map(
                                ({ date, transactions: dateTransactions }) => (
                                    <div class="bg-gray-750 rounded-xl p-6 shadow-lg border border-gray-700">
                                        <div class="flex items-center justify-between mb-6 pb-4 border-b border-gray-600">
                                            <div class="flex items-center gap-4">
                                                <div class="bg-purple-600 rounded-full p-3">
                                                    <svg
                                                        class="w-5 h-5 text-white"
                                                        fill="none"
                                                        stroke="currentColor"
                                                        viewBox="0 0 24 24"
                                                    >
                                                        <path
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                            stroke-width="2"
                                                            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                                        />
                                                    </svg>
                                                </div>
                                                <div>
                                                    <h3 class="text-xl font-bold text-white">
                                                        {formatDateForDisplay(
                                                            `${date} 00:00:00`,
                                                            {
                                                                includeTime: false,
                                                                dateStyle:
                                                                    "long",
                                                            },
                                                        )}
                                                    </h3>
                                                    <p class="text-sm text-gray-400">
                                                        {
                                                            dateTransactions.length
                                                        }
                                                        transaction
                                                        {dateTransactions.length !==
                                                        1
                                                            ? "s"
                                                            : ""}
                                                        • Total:
                                                        {(() => {
                                                            const dailyTotal =
                                                                dateTransactions.reduce(
                                                                    (
                                                                        sum,
                                                                        t,
                                                                    ) => {
                                                                        return (
                                                                            sum +
                                                                            (t.type ===
                                                                            "Income"
                                                                                ? t.amount
                                                                                : -t.amount)
                                                                        );
                                                                    },
                                                                    0,
                                                                );
                                                            return dailyTotal >=
                                                                0
                                                                ? "+"
                                                                : "";
                                                        })()}
                                                        {new Intl.NumberFormat(
                                                            "es-ES",
                                                            {
                                                                style: "currency",
                                                                currency: "EUR",
                                                                minimumFractionDigits: 2,
                                                            },
                                                        ).format(
                                                            dateTransactions.reduce(
                                                                (sum, t) => {
                                                                    return (
                                                                        sum +
                                                                        (t.type ===
                                                                        "Income"
                                                                            ? t.amount
                                                                            : -t.amount)
                                                                    );
                                                                },
                                                                0,
                                                            ),
                                                        )}
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <div class="text-xs text-gray-400 bg-gray-700 px-2 py-1 rounded">
                                                    {
                                                        dateTransactions.filter(
                                                            (t) =>
                                                                t.type ===
                                                                "Income",
                                                        ).length
                                                    }
                                                    Income
                                                </div>
                                                <div class="text-xs text-gray-400 bg-gray-700 px-2 py-1 rounded">
                                                    {
                                                        dateTransactions.filter(
                                                            (t) =>
                                                                t.type !==
                                                                "Income",
                                                        ).length
                                                    }
                                                    Expenses
                                                </div>
                                            </div>
                                        </div>

                                        <div class="grid gap-3">
                                            {dateTransactions.map(
                                                (transaction) => (
                                                    <div class="bg-gray-700 rounded-lg p-4 hover:bg-gray-650 transition-all duration-200 hover:shadow-md border border-gray-600 hover:border-gray-500 transaction-card">
                                                        <div class="grid grid-cols-1 lg:grid-cols-12 gap-4 items-center">
                                                            <div class="lg:col-span-2 flex lg:flex-col flex-row items-center lg:items-center gap-3">
                                                                <div class="flex lg:flex-col flex-row items-center lg:items-center gap-2 lg:gap-0">
                                                                    <div class="text-sm font-mono font-semibold text-purple-300">
                                                                        {getTimePartWithoutSeconds(
                                                                            transaction.date,
                                                                        )}
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="lg:col-span-5 order-1 lg:order-none">
                                                                <div class="mb-2">
                                                                    <h4 class="font-semibold text-white text-lg leading-tight">
                                                                        {
                                                                            transaction.name
                                                                        }
                                                                    </h4>
                                                                    <div class="flex items-center gap-2 mt-1">
                                                                        <span class="text-sm text-gray-400">
                                                                            {
                                                                                transaction
                                                                                    .account
                                                                                    .name
                                                                            }
                                                                        </span>
                                                                        <span class="text-xs text-gray-500">
                                                                            <div
                                                                                class="w-1 h-1 rounded-full lg:mt-1"
                                                                                style={`background-color: ${transaction.account.color}`}
                                                                            />
                                                                        </span>
                                                                        <span class="text-xs text-gray-400">
                                                                            Done
                                                                            by
                                                                            {
                                                                                transaction
                                                                                    .user
                                                                                    .username
                                                                            }
                                                                        </span>
                                                                    </div>
                                                                </div>

                                                                <div class="flex items-center gap-2 flex-wrap">
                                                                    {transaction.category && (
                                                                        <span
                                                                            class="px-2 py-1 rounded-full text-xs font-medium text-white"
                                                                            style={`background-color: ${transaction.category.color}`}
                                                                        >
                                                                            {
                                                                                transaction
                                                                                    .category
                                                                                    .name
                                                                            }
                                                                        </span>
                                                                    )}
                                                                    {transaction.tags.map(
                                                                        (
                                                                            tag,
                                                                        ) => (
                                                                            <span
                                                                                class="text-xs px-2 py-1 rounded-full text-white border"
                                                                                style={`background-color: ${tag.color}; border-color: ${tag.color}`}
                                                                            >
                                                                                {
                                                                                    tag.name
                                                                                }
                                                                            </span>
                                                                        ),
                                                                    )}
                                                                </div>
                                                            </div>

                                                            <div class="lg:col-span-3 lg:text-center text-right order-2 lg:order-none">
                                                                <div
                                                                    class={`text-2xl font-bold ${
                                                                        transaction.type ===
                                                                        "Income"
                                                                            ? "text-green-400"
                                                                            : "text-red-400"
                                                                    }`}
                                                                >
                                                                    {transaction.type ===
                                                                    "Income"
                                                                        ? "+"
                                                                        : "-"}
                                                                    {new Intl.NumberFormat(
                                                                        "es-ES",
                                                                        {
                                                                            style: "currency",
                                                                            currency:
                                                                                "EUR",
                                                                            minimumFractionDigits: 2,
                                                                        },
                                                                    ).format(
                                                                        transaction.amount,
                                                                    )}
                                                                </div>
                                                                <div class="text-xs text-gray-400 mt-1">
                                                                    {
                                                                        transaction.type
                                                                    }
                                                                </div>
                                                            </div>

                                                            <div class="lg:col-span-2 flex justify-end gap-2 order-3 lg:order-none">
                                                                <button
                                                                    type="button"
                                                                    class="edit-btn bg-blue-600 hover:bg-blue-700 p-2 rounded-lg text-white transition duration-200 shadow-sm hover:shadow-md"
                                                                    data-transaction={JSON.stringify(
                                                                        transaction,
                                                                    )}
                                                                    title="Edit transaction"
                                                                >
                                                                    <svg
                                                                        class="w-4 h-4"
                                                                        fill="none"
                                                                        stroke="currentColor"
                                                                        viewBox="0 0 24 24"
                                                                    >
                                                                        <path
                                                                            stroke-linecap="round"
                                                                            stroke-linejoin="round"
                                                                            stroke-width="2"
                                                                            d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                                                                        />
                                                                    </svg>
                                                                </button>
                                                                <form
                                                                    method="POST"
                                                                    class="inline"
                                                                    onsubmit="return confirm('Are you sure you want to delete this transaction?')"
                                                                >
                                                                    <input
                                                                        type="hidden"
                                                                        name="_action"
                                                                        value="delete"
                                                                    />
                                                                    <input
                                                                        type="hidden"
                                                                        name="id"
                                                                        value={
                                                                            transaction.id
                                                                        }
                                                                    />
                                                                    <button
                                                                        type="submit"
                                                                        class="bg-red-600 hover:bg-red-700 p-2 rounded-lg text-white transition duration-200 shadow-sm hover:shadow-md"
                                                                        title="Delete transaction"
                                                                    >
                                                                        <svg
                                                                            class="w-4 h-4"
                                                                            fill="none"
                                                                            stroke="currentColor"
                                                                            viewBox="0 0 24 24"
                                                                        >
                                                                            <path
                                                                                stroke-linecap="round"
                                                                                stroke-linejoin="round"
                                                                                stroke-width="2"
                                                                                d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                                                                            />
                                                                        </svg>
                                                                    </button>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </div>
                                                ),
                                            )}
                                        </div>
                                    </div>
                                ),
                            )}
                        </div>
                    )}

                    {pagination && pagination.totalPages > 1 && (
                        <div class="flex justify-center mt-6 gap-2">
                            {Array.from(
                                { length: pagination.totalPages },
                                (_, i) => (
                                    <a
                                        href={`/transactions?page=${i + 1}`}
                                        class={`px-3 py-2 rounded ${
                                            pagination.page === i + 1
                                                ? "bg-purple-600 text-white"
                                                : "bg-gray-700 text-gray-300 hover:bg-gray-600"
                                        }`}
                                    >
                                        {i + 1}
                                    </a>
                                ),
                            )}
                        </div>
                    )}
                </div>
            )
        }
    </main>
</Layout>

<TransactionModal />
{toastMessage && <ToastScript message={toastMessage} type={toastType} />}

<Footer />
<LogoutScript />

<script>
    // Add Transaction button functionality
    const addTransactionBtn = document.getElementById("addTransactionBtn");
    if (addTransactionBtn) {
        addTransactionBtn.addEventListener("click", function () {
            const openModal = (window as any).openTransactionModal;
            if (openModal) {
                openModal();
            }
        });
    }

    // Edit functionality
    document.querySelectorAll(".edit-btn").forEach((btn) => {
        btn.addEventListener("click", function (this: HTMLElement) {
            const transactionData = this.dataset.transaction;
            if (!transactionData) return;

            const transaction = JSON.parse(transactionData);
            const fillFormForEdit = (window as any).fillFormForEdit;
            if (fillFormForEdit) {
                fillFormForEdit(transaction);
            }
        });
    });
</script>
