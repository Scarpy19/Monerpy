---
import Layout from "@layouts/Layout.astro";

// Check if user is already authenticated via middleware
if (Astro.locals.user) {
  console.log(
    "login.astro: User is already authenticated, redirecting to dashboard",
  );
  return Astro.redirect("/dashboard");
}
---

<Layout title="Login" description="Login to your Monerpy account">
  <main class="min-h-screen flex items-center justify-center bg-gray-900">
    <div class="bg-gray-800 p-8 rounded-lg shadow-lg w-96">
      <h1 class="text-3xl font-bold text-purple-500 mb-6 text-center">
        Are you Scarpy?
      </h1>
      <form id="loginForm" class="flex flex-col gap-y-4">
        <div>
          <label for="email" class="block text-purple-300 mb-2">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-purple-500 focus:ring-1 focus:ring-purple-500"
          />
        </div>
        <div>
          <label for="password" class="block text-purple-300 mb-2"
            >Password</label
          >
          <input
            type="password"
            id="password"
            name="password"
            required
            class="w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-purple-500 focus:ring-1 focus:ring-purple-500"
          />
        </div>
        <div class="flex items-center justify-between mb-4">
          <label class="flex items-center text-purple-300">
            <input
              type="checkbox"
              name="remember"
              class="form-checkbox h-4 w-4 text-purple-600 bg-gray-700 border-gray-600 rounded focus:ring-purple-500"
            />
            <span class="ml-2">Remember me</span>
          </label>
        </div>
        <button
          type="submit"
          class="w-full py-2 px-4 bg-purple-600 text-white rounded hover:bg-purple-700 transition duration-200"
        >
          Login
        </button>
      </form>
      <a
        href="/"
        class="block mt-4 text-purple-300 text-center w-full hover:underline"
        >Back to Home</a
      >
      <div id="errorMessage" class="mt-4 text-red-400 text-center hidden"></div>
    </div>
  </main>
</Layout>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  // Get redirect URL from current page URL parameters
  const urlParams = new URLSearchParams(window.location.search);
  const redirectTo = urlParams.get("redirectTo") || "/dashboard";

  const form = document.getElementById("loginForm") as HTMLFormElement;
  const loginButton = form?.querySelector(
    'button[type="submit"]',
  ) as HTMLButtonElement;

  if (form && loginButton) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      loginButton.disabled = true;
      const originalText = loginButton.textContent;
      loginButton.innerHTML = `<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg> Loading...`;

      try {
        const formData = new FormData(form);

        const { data, error } = await actions.login(formData);

        if (error) {
          throw new Error(error.message || "Login failed");
        }

        if (data?.ok) {
          // Use Astro's navigate for client-side routing
          navigate(redirectTo);
        } else {
          throw new Error(data?.error || "Login failed");
        }
      } catch (error) {
        // Display error message to user
        const errorDiv = document.getElementById(
          "errorMessage",
        ) as HTMLDivElement;
        errorDiv.classList.remove("hidden");
        const errorMessage =
          error instanceof Error ? error.message : "Login failed";
        if (errorDiv) {
          errorDiv.textContent = errorMessage;
        }
        console.error("Login error:", error);

        // Reset button state
        loginButton.disabled = false;
        loginButton.textContent = originalText;
      }
    });
  }
</script>
