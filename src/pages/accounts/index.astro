---
import Layout from "@layouts/Layout.astro";
import Footer from "@comps/Footer.astro";
import LogoutScript from "@comps/LogoutScript.astro";
import Header from "@comps/Header.astro";
import AccountModal from "@comps/AccountModal.astro";
import ToastScript from "@comps/ToastScript.astro";
import { actions } from "astro:actions";

const user = Astro.locals.user;

if (!user) {
    return Astro.redirect("/login");
}

// Handle form submissions
let toastMessage = "";
let toastType = "success";

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("_action") as string;

    if (action === "create") {
        const result = await Astro.callAction(actions.createAccount, formData);
        if (result.data?.ok) {
            toastMessage = "Account created successfully!";
            toastType = "success";
        }
    } else if (action === "delete") {
        const result = await Astro.callAction(actions.deleteAccount, formData);
        if (result.data?.ok) {
            toastMessage = "Account deleted successfully!";
            toastType = "success";
        }
    }
}

// Check if user is in a family first
const userResult = await Astro.callAction(actions.getFamilyDetails, {});
const userInFamily = userResult.data?.ok && userResult.data.family;

// Get accounts data only if user is in a family
const accountsResult = userInFamily
    ? await Astro.callAction(actions.getAccountsList, { includeDeleted: false })
    : { data: { ok: false, accounts: [] } };
const accounts = accountsResult.data?.ok ? accountsResult.data.accounts : [];

// Account type options for display
const accountTypes = [
    { value: "Cash", label: "Cash", icon: "üíµ" },
    { value: "Checking", label: "Checking Account", icon: "üè¶" },
    { value: "Savings", label: "Savings Account", icon: "üí∞" },
    { value: "CreditCard", label: "Credit Card", icon: "üí≥" },
    { value: "Investment", label: "Investment Account", icon: "üìà" },
    { value: "Loan", label: "Loan Account", icon: "üè†" },
];
---

<Layout title="Accounts" description="Manage your accounts">
    <main class="bg-gray-900 p-8 min-h-screen text-white">
        <Header currentPage="accounts" user={user} />

        <div class="mx-auto max-w-7xl">
            {
                !userInFamily ? (
                    <div>
                        <div class="bg-gray-800 shadow-lg px-8 py-12 rounded-lg text-center">
                            <div class="text-6xl mb-6">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</div>
                            <h2 class="text-2xl font-bold text-purple-400 mb-4">
                                Join a Family First
                            </h2>
                            <p class="text-gray-300 mb-6 max-w-md mx-auto">
                                You need to be part of a family to create and
                                manage accounts. Families help organize finances
                                and allow multiple members to collaborate.
                            </p>
                            <div class="space-y-4">
                                <a
                                    href="/families"
                                    class="inline-block bg-purple-600 hover:bg-purple-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors"
                                >
                                    Go to Families Page
                                </a>
                                <p class="text-sm text-gray-400">
                                    Create a new family or join an existing one
                                    to get started
                                </p>
                            </div>
                        </div>
                    </div>
                ) : (
                    <div class="bg-gray-800 shadow-lg px-6 py-6 rounded-lg">
                        <div class="flex items-center justify-between mb-6">
                            <h2 class="font-semibold text-purple-400 text-xl">
                                Your Accounts
                            </h2>
                            <div class="flex items-center space-x-4">
                                <button
                                    type="button"
                                    onclick="showAccountModal()"
                                    class="bg-purple-600 hover:bg-purple-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors"
                                >
                                    Create Account
                                </button>
                                <a
                                    href="/accounts/deleted"
                                    class="text-gray-400 hover:text-white text-sm underline"
                                >
                                    View Deleted Accounts
                                </a>
                            </div>
                        </div>

                        {accounts && accounts.length === 0 ? (
                            <div class="text-center py-12 text-gray-400">
                                <div class="text-6xl mb-4">üè¶</div>
                                <p class="text-xl mb-2">
                                    No accounts yet
                                </p>
                                <p>
                                    Create your first account to get
                                    started!
                                </p>
                            </div>
                        ) : (
                            <div class="flex flex-col gap-y-4">
                                {accounts &&
                                    accounts.map((account) => (
                                        <div class="bg-gray-700 rounded-lg p-4 flex items-center justify-between">
                                            <div class="flex items-center gap-x-4">
                                                <div
                                                    class="w-4 h-4 rounded-full"
                                                    style={`background-color: ${account.color}`}
                                                />
                                                <div>
                                                    <h3 class="font-semibold text-white">
                                                        {account.name}
                                                    </h3>
                                                    <p class="text-sm text-gray-400">
                                                        {accountTypes.find(
                                                            (t) =>
                                                                t.value ===
                                                                account.accountType,
                                                        )?.label ||
                                                            account.accountType}
                                                    </p>
                                                </div>
                                            </div>

                                            <div class="flex items-center gap-x-4">
                                                <div class="text-right">
                                                    <p
                                                        class={`font-semibold ${account.balance >= 0 ? "text-green-400" : "text-red-400"}`}
                                                    >
                                                        {new Intl.NumberFormat(
                                                            "es-ES",
                                                            {
                                                                style: "currency",
                                                                currency:
                                                                    "EUR",
                                                                minimumFractionDigits: 2,
                                                            },
                                                        ).format(
                                                            account.balance,
                                                        )}
                                                    </p>
                                                </div>

                                                <div class="flex items-center gap-x-2">
                                                    <a
                                                        href={`/accounts/${account.id}`}
                                                        class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors"
                                                    >
                                                        View
                                                    </a>
                                                    <form
                                                        method="POST"
                                                        class="inline"
                                                    >
                                                        <input
                                                            type="hidden"
                                                            name="_action"
                                                            value="delete"
                                                        />
                                                        <input
                                                            type="hidden"
                                                            name="id"
                                                            value={
                                                                account.id
                                                            }
                                                        />
                                                        <button
                                                            type="submit"
                                                            onclick="return confirm('Are you sure you want to delete this account?')"
                                                            class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm transition-colors"
                                                        >
                                                            Delete
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                            </div>
                        )}
                    </div>
                )
            }
        </div>

        <!-- Account Modal Component -->
        <AccountModal />
    </main>

    <Footer />
    <LogoutScript />
    {toastMessage && <ToastScript message={toastMessage} type={toastType} />}
</Layout>
