---
import Layout from "@layouts/Layout.astro";
import LogoutScript from "@comps/layout/LogoutScript.astro";
import Header from "@comps/layout/Header.astro";
import { actions } from "astro:actions";
import { formatDateForDisplay, formatCurrency } from "@lib/date-utils.ts";
import CSRFToken from "@comps/CSRFToken.astro";
import Bin from "@comps/svgs/mono/Bin.astro";
import CreditCard from "@comps/svgs/mono/CreditCard.astro";
import { accountTypes } from "@arrays.d.ts";

const user = Astro.locals.user;

if (!user) {
    return Astro.redirect("/login");
}

// Check if user is in a family first
const userResult = await Astro.callAction(actions.getFamilyDetails, {});
const userInFamily = userResult.data?.ok && userResult.data.family;

if (!userInFamily) {
    return Astro.redirect("/accounts");
}

// Get deleted accounts
const accountsResult = await Astro.callAction(actions.getAccountsList, {
    includeDeleted: true,
});
const allAccounts = accountsResult.data?.ok ? accountsResult.data.accounts : [];
const deletedAccounts = allAccounts
    ? allAccounts.filter((account: any) => account.deletedAt !== null)
    : [];
---

<Layout title="Deleted Accounts" description="Manage deleted accounts">
    <main class="bg-gray-900 p-8 text-white">
        <Header currentPage="accounts" user={user} />
        <!-- Deleted Accounts List -->
        <div
            class="bg-gray-800 shadow-lg px-6 py-6 rounded-lg mx-auto max-w-7xl"
        >
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-baseline-last gap-x-4">
                    <h1
                        class="font-semibold text-purple-400 text-xl flex items-center gap-x-2"
                    >
                        <Bin />
                        Deleted Accounts
                    </h1>
                    <a
                        href="/accounts"
                        class="text-purple-400 hover:text-purple-300 flex items-center gap-x-2"
                    >
                        <CreditCard class="w-4 h-4" />
                        <span>Accounts</span>
                    </a>
                </div>
                <div class="flex items-center gap-x-4">
                    <button
                        type="button"
                        class="bg-purple-600 hover:bg-purple-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors text-sm"
                        title="Create a new account"
                    >
                        A button
                    </button>
                </div>
            </div>

            {
                deletedAccounts.length === 0 ? (
                    <div class="text-center py-10 text-gray-400">
                        <div class="mb-4 flex justify-center">
                            <Bin class="w-14 h-14" />
                        </div>
                        <p class="text-xl font-semibold text-gray-300 mb-2">
                            No deleted accounts
                        </p>
                        <p>All your accounts are active!</p>
                    </div>
                ) : (
                    <div class="flex flex-col gap-y-4">
                        {deletedAccounts.map((account: any) => (
                            <div class="bg-gray-700 rounded-lg p-4 border-l-4 border-red-500">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-x-4">
                                        <div
                                            class="w-4 h-4 rounded-full opacity-50"
                                            style={`background-color: ${account.color}`}
                                        />
                                        <div>
                                            <h3 class="font-semibold text-white">
                                                {account.name}
                                                <span class="text-red-400 text-sm ml-2">
                                                    (Deleted)
                                                </span>
                                            </h3>
                                            <p class="text-sm text-gray-400">
                                                {accountTypes.find(
                                                    (t) =>
                                                        t.value ===
                                                        account.accountType,
                                                )?.label || account.accountType}
                                            </p>
                                            <p class="text-xs text-gray-500 mt-1">
                                                Deleted on:
                                                {formatDateForDisplay(
                                                    account.deletedAt,
                                                    {
                                                        includeTime: true,
                                                        dateStyle: "long",
                                                    },
                                                )}
                                            </p>
                                        </div>
                                    </div>

                                    <div class="flex items-center gap-x-4">
                                        <div class="text-right">
                                            <p
                                                class={`font-semibold ${account.balance >= 0 ? "text-green-400" : "text-red-400"} opacity-75`}
                                            >
                                                {formatCurrency(
                                                    account.balance,
                                                )}
                                            </p>
                                            <p class="text-xs text-gray-500">
                                                Last balance
                                            </p>
                                        </div>

                                        <div class="flex items-center gap-x-2">
                                            <form class="restore-account-form inline">
                                                <CSRFToken />
                                                <input
                                                    type="hidden"
                                                    name="id"
                                                    value={account.id}
                                                />
                                                <button
                                                    type="submit"
                                                    data-account-name={account.name}
                                                    class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm transition-colors"
                                                >
                                                    Restore
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        ))}

                        <div class="mt-8 p-4 bg-yellow-900/50 border border-yellow-700 rounded-lg">
                            <div class="flex items-start gap-x-3">
                                <div class="text-yellow-400 text-xl">⚠️</div>
                                <div>
                                    <h3 class="text-yellow-400 font-semibold mb-2">
                                        About Deleted Accounts
                                    </h3>
                                    <ul class="text-yellow-200 text-sm flex flex-col gap-y-1">
                                        <li>
                                            • Deleted accounts are hidden from
                                            the main interface but their data is
                                            preserved
                                        </li>
                                        <li>
                                            • All transactions and balance
                                            history remain intact
                                        </li>
                                        <li>
                                            • You can restore deleted accounts
                                            at any time
                                        </li>
                                        <li>
                                            • Restored accounts will reappear in
                                            your account lists
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                )
            }
        </div>
    </main>

    <LogoutScript />
    
    <script>
        // Handle restore account forms
        document.addEventListener("DOMContentLoaded", function () {
            const restoreForms = document.querySelectorAll(".restore-account-form");
            
            restoreForms.forEach((form) => {
                form.addEventListener("submit", async function (e) {
                    e.preventDefault();

                    const button = form.querySelector("button");
                    const accountName = button?.getAttribute("data-account-name");
                    
                    // Confirmation dialog
                    if (!confirm(`Are you sure you want to restore "${accountName}"?`)) {
                        return;
                    }

                    const formData = new FormData(form as HTMLFormElement);

                    try {
                        const { actions } = await import("astro:actions");
                        const result = await actions.restoreAccount(formData);

                        if (result.data?.ok) {
                            const { ToastService } = await import("@lib/toast.ts");
                            ToastService.success("Account restored successfully!");
                            // Reload the page to show updated data
                            window.location.reload();
                        } else {
                            const { ToastService } = await import("@lib/toast.ts");
                            ToastService.error(
                                result.data?.error || "Failed to restore account",
                            );
                            console.error(
                                "Account restore failed:",
                                result.error || result.data?.error,
                            );
                        }
                    } catch (error) {
                        const { ToastService } = await import("@lib/toast.ts");
                        ToastService.error("An error occurred. Please try again.");
                        console.error("Error restoring account:", error);
                    }
                });
            });
        });
    </script>
</Layout>
