---
import Layout from "@layouts/Layout.astro";
import Footer from "@comps/Footer.astro";
import LogoutScript from "@comps/LogoutScript.astro";
import Header from "@comps/Header.astro";
import { actions } from "astro:actions";

const user = Astro.locals.user;

if (!user) {
    return Astro.redirect("/login");
}

// Check if user is in a family first
const userResult = await Astro.callAction(actions.getFamilyDetails, {});
const userInFamily = userResult.data?.ok && userResult.data.family;

if (!userInFamily) {
    return Astro.redirect("/accounts");
}

// Handle form submissions
if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("_action") as string;

    if (action === "restore") {
        const result = await Astro.callAction(actions.restoreAccount, formData);
        if (result.data?.ok) {
            return Astro.redirect("/accounts/deleted?success=restored");
        }
    }
}

// Get deleted accounts
const accountsResult = await Astro.callAction(actions.getAccountsList, {
    includeDeleted: true,
});
const allAccounts = accountsResult.data?.ok ? accountsResult.data.accounts : [];
const deletedAccounts = allAccounts
    ? allAccounts.filter((account: any) => account.deletedAt !== null)
    : [];

// Get URL parameters for success messages
const url = new URL(Astro.request.url);
const success = url.searchParams.get("success");

// Account type options
const accountTypes = [
    { value: "Cash", label: "Cash", icon: "üíµ" },
    { value: "Checking", label: "Checking Account", icon: "üè¶" },
    { value: "Savings", label: "Savings Account", icon: "üí∞" },
    { value: "CreditCard", label: "Credit Card", icon: "üí≥" },
    { value: "Investment", label: "Investment Account", icon: "üìà" },
    { value: "Loan", label: "Loan Account", icon: "üè†" },
];
---

<Layout title="Deleted Accounts" description="Manage deleted accounts">
    <main class="bg-gray-900 p-8 min-h-screen text-white">
        <Header currentPage="accounts" user={user} />

        <!-- Success Messages -->
        {
            success && (
                <div class="mx-auto max-w-7xl mb-6">
                    <div class="bg-green-600 text-white px-4 py-3 rounded-lg">
                        {success === "restored" &&
                            "Account restored successfully!"}
                    </div>
                </div>
            )
        }

        <div class="mx-auto max-w-7xl">
            <!-- Back Link -->
            <div class="mb-6">
                <a
                    href="/accounts"
                    class="text-purple-400 hover:text-purple-300 flex items-center space-x-2"
                >
                    <span>‚Üê</span>
                    <span>Back to Accounts</span>
                </a>
            </div>

            <!-- Deleted Accounts List -->
            <div class="bg-gray-800 shadow-lg px-6 py-6 rounded-lg">
                <h1 class="mb-6 font-semibold text-purple-400 text-2xl">
                    Deleted Accounts
                </h1>

                {
                    deletedAccounts.length === 0 ? (
                        <div class="text-center py-12 text-gray-400">
                            <div class="text-6xl mb-4">üóëÔ∏è</div>
                            <p class="text-xl mb-2">No deleted accounts</p>
                            <p>All your accounts are active!</p>
                        </div>
                    ) : (
                        <div class="space-y-4">
                            {deletedAccounts.map((account: any) => (
                                <div class="bg-gray-700 rounded-lg p-4 border-l-4 border-red-500">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center space-x-4">
                                            <div
                                                class="w-4 h-4 rounded-full opacity-50"
                                                style={`background-color: ${account.color}`}
                                            />
                                            <div>
                                                <h3 class="font-semibold text-white">
                                                    {account.name}
                                                    <span class="text-red-400 text-sm ml-2">
                                                        (Deleted)
                                                    </span>
                                                </h3>
                                                <p class="text-sm text-gray-400">
                                                    {accountTypes.find(
                                                        (t) =>
                                                            t.value ===
                                                            account.accountType,
                                                    )?.label ||
                                                        account.accountType}
                                                </p>
                                                <p class="text-xs text-gray-500 mt-1">
                                                    Deleted on:{" "}
                                                    {new Date(
                                                        account.deletedAt,
                                                    ).toLocaleDateString(
                                                        "en-US",
                                                        {
                                                            year: "numeric",
                                                            month: "long",
                                                            day: "numeric",
                                                            hour: "2-digit",
                                                            minute: "2-digit",
                                                        },
                                                    )}
                                                </p>
                                            </div>
                                        </div>

                                        <div class="flex items-center space-x-4">
                                            <div class="text-right">
                                                <p
                                                    class={`font-semibold ${account.balance >= 0 ? "text-green-400" : "text-red-400"} opacity-75`}
                                                >
                                                    {new Intl.NumberFormat(
                                                        "es-ES",
                                                        {
                                                            style: "currency",
                                                            currency: "EUR",
                                                            minimumFractionDigits: 2,
                                                        },
                                                    ).format(account.balance)}
                                                </p>
                                                <p class="text-xs text-gray-500">
                                                    Last balance
                                                </p>
                                            </div>

                                            <div class="flex items-center space-x-2">
                                                <form
                                                    method="POST"
                                                    class="inline"
                                                >
                                                    <input
                                                        type="hidden"
                                                        name="_action"
                                                        value="restore"
                                                    />
                                                    <input
                                                        type="hidden"
                                                        name="id"
                                                        value={account.id}
                                                    />
                                                    <button
                                                        type="submit"
                                                        onclick="return confirm('Are you sure you want to restore this account?')"
                                                        class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm transition-colors"
                                                    >
                                                        Restore
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            ))}

                            <div class="mt-8 p-4 bg-yellow-900 bg-opacity-50 border border-yellow-700 rounded-lg">
                                <div class="flex items-start space-x-3">
                                    <div class="text-yellow-400 text-xl">
                                        ‚ö†Ô∏è
                                    </div>
                                    <div>
                                        <h3 class="text-yellow-400 font-semibold mb-2">
                                            About Deleted Accounts
                                        </h3>
                                        <ul class="text-yellow-200 text-sm space-y-1">
                                            <li>
                                                ‚Ä¢ Deleted accounts are hidden
                                                from the main interface but
                                                their data is preserved
                                            </li>
                                            <li>
                                                ‚Ä¢ All transactions and balance
                                                history remain intact
                                            </li>
                                            <li>
                                                ‚Ä¢ You can restore deleted
                                                accounts at any time
                                            </li>
                                            <li>
                                                ‚Ä¢ Restored accounts will
                                                reappear in your account lists
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )
                }
            </div>
        </div>
    </main>

    <Footer />
    <LogoutScript />
</Layout>
