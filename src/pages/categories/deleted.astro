---
import Layout from "@layouts/Layout.astro";
import LogoutScript from "@comps/layout/LogoutScript.astro";
import Header from "@comps/layout/Header.astro";
import ConfirmationModal from "@comps/ConfirmationModal.astro";
import { actions } from "astro:actions";
import { formatDateForDisplay } from "@lib/date-utils.ts";
import Bin from "@comps/svgs/mono/Bin.astro";
import Folder from "@comps/svgs/mono/Folder.astro";

const user = Astro.locals.user;

if (!user) {
    return Astro.redirect("/login");
}

// Check if user is in a family first
const userResult = await Astro.callAction(actions.getFamilyDetails, {});
const userInFamily = userResult.data?.ok && userResult.data.family;

if (!userInFamily) {
    return Astro.redirect("/categories");
}

// Get deleted categories
const categoriesResult = await Astro.callAction(actions.getCategories, {
    includeDeleted: true,
});
const rawCategories = categoriesResult.data?.ok
    ? categoriesResult.data.categories
    : [];

// Normalize categories into a flat array
let normalizedCategories: any[] = [];
if (Array.isArray(rawCategories)) {
    normalizedCategories = rawCategories;
} else if (rawCategories && typeof rawCategories === "object") {
    const vals = Object.values(rawCategories) as any[];
    normalizedCategories = vals.flatMap((v) => (Array.isArray(v) ? v : [v]));
} else {
    normalizedCategories = [];
}

const deletedCategories = normalizedCategories
    ? normalizedCategories.filter(
          (category: any) => category.deletedAt !== null,
      )
    : [];
---

<Layout title="Deleted Categories" description="Manage deleted categories">
    <main class="bg-gray-900 p-8 text-white">
        <Header currentPage="categories" user={user} />
        <!-- Deleted Categories List -->
        <div
            class="bg-gray-800 shadow-lg px-6 py-6 rounded-lg mx-auto max-w-7xl"
        >
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-baseline-last gap-x-4">
                    <h1
                        class="font-semibold text-purple-400 text-xl flex items-center gap-x-2"
                    >
                        <Bin />
                        Deleted Categories
                    </h1>
                    <a
                        href="/categories"
                        class="text-purple-400 hover:text-purple-300 flex items-center gap-x-2"
                    >
                        <Folder class="w-4 h-4" />
                        <span>Categories</span>
                    </a>
                </div>
            </div>

            {
                deletedCategories.length === 0 ? (
                    <div class="text-center py-10 text-gray-400">
                        <div class="mb-4 flex justify-center">
                            <Bin class="w-14 h-14" />
                        </div>
                        <p class="text-xl font-semibold text-gray-300 mb-2">
                            No deleted categories
                        </p>
                        <p>All your categories are active!</p>
                    </div>
                ) : (
                    <div class="flex flex-col gap-y-4">
                        {deletedCategories.map((category: any) => (
                            <div class="bg-gray-700 rounded-lg p-4 border-l-4 border-red-500">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-x-4">
                                        <div
                                            class="w-4 h-4 rounded-full opacity-50"
                                            style={`background-color: ${category.color}`}
                                        />
                                        <div>
                                            <h3 class="font-semibold text-white">
                                                {category.name}
                                                <span class="text-red-400 text-sm ml-2">
                                                    (Deleted)
                                                </span>
                                            </h3>
                                            {category.parentId && (
                                                <p class="text-sm text-gray-400">
                                                    Subcategory
                                                </p>
                                            )}
                                            <p class="text-xs text-gray-500 mt-1">
                                                Deleted on:
                                                {formatDateForDisplay(
                                                    category.deletedAt,
                                                    {
                                                        includeTime: true,
                                                        dateStyle: "long",
                                                    },
                                                )}
                                            </p>
                                        </div>
                                    </div>

                                    <div class="flex items-center gap-x-2">
                                        <form class="restore-category-form inline">
                                            <input
                                                type="hidden"
                                                name="id"
                                                value={category.id}
                                            />
                                            <button
                                                type="submit"
                                                data-category-name={
                                                    category.name
                                                }
                                                class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm transition-colors"
                                            >
                                                Restore
                                            </button>
                                        </form>
                                        <form class="purge-category-form inline">
                                            <input
                                                type="hidden"
                                                name="id"
                                                value={category.id}
                                            />
                                            <button
                                                type="submit"
                                                data-category-name={
                                                    category.name
                                                }
                                                class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm transition-colors"
                                            >
                                                Purge
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        ))}

                        <div class="mt-8 p-4 bg-yellow-900/50 border border-yellow-700 rounded-lg">
                            <div class="flex items-start gap-x-3">
                                <div class="text-yellow-400 text-xl">⚠️</div>
                                <div>
                                    <h3 class="text-yellow-400 font-semibold mb-2">
                                        About Deleted Categories
                                    </h3>
                                    <ul class="text-yellow-200 text-sm flex flex-col gap-y-1">
                                        <li>
                                            • Deleted categories are hidden from
                                            the main interface but their data is
                                            preserved
                                        </li>
                                        <li>
                                            • All associated transactions remain
                                            intact
                                        </li>
                                        <li>
                                            • You can restore deleted categories
                                            at any time
                                        </li>
                                        <li>
                                            • Restored categories will reappear
                                            in your category lists
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                )
            }
        </div>
    </main>

    <ConfirmationModal variant="info" />
    <LogoutScript />

    <script>
        // Handle restore category forms
        document.addEventListener("DOMContentLoaded", function () {
            const restoreForms = document.querySelectorAll(
                ".restore-category-form",
            );

            restoreForms.forEach((form) => {
                form.addEventListener("submit", async function (e) {
                    e.preventDefault();

                    const button = form.querySelector("button");
                    const categoryName =
                        button?.getAttribute("data-category-name");

                    // Show confirmation modal
                    const confirmationModal = document.getElementById(
                        "confirmationModal",
                    ) as any;
                    if (!confirmationModal) {
                        console.error("Confirmation modal not found");
                        return;
                    }

                    confirmationModal.show({
                        title: "Restore Category",
                        message: `Are you sure you want to restore "${categoryName}"?`,
                        confirmLabel: "Restore",
                        cancelLabel: "Cancel",
                        onConfirm: async () => {
                            const csrfInput = document.querySelector(
                                'input[name="_csrf_token"]',
                            ) as HTMLInputElement;

                            const formData = new FormData(
                                form as HTMLFormElement,
                            );

                            if (csrfInput && csrfInput.value) {
                                formData.set("_csrf_token", csrfInput.value);
                            }

                            const { ToastService } = await import(
                                "@lib/toast.ts"
                            );

                            try {
                                const { actions } = await import(
                                    "astro:actions"
                                );
                                const result =
                                    await actions.restoreCategory(formData);

                                if (result.data?.ok) {
                                    ToastService.success(
                                        "Category restored successfully!",
                                    );
                                    // Reload the page to show updated data
                                    window.location.reload();
                                } else {
                                    ToastService.error(
                                        result.data?.error ||
                                            "Failed to restore category",
                                    );
                                    console.error(
                                        "Category restore failed:",
                                        result.error || result.data?.error,
                                    );
                                }
                            } catch (error) {
                                ToastService.error(
                                    "An error occurred. Please try again.",
                                );
                                console.error(
                                    "Error restoring category:",
                                    error,
                                );
                            }
                        },
                    });
                });
            });

            // Handle purge category forms
            const purgeForms = document.querySelectorAll(
                ".purge-category-form",
            );

            purgeForms.forEach((form) => {
                form.addEventListener("submit", async function (e) {
                    e.preventDefault();

                    const button = form.querySelector("button");
                    const categoryName =
                        button?.getAttribute("data-category-name");

                    // Show confirmation modal
                    const confirmationModal = document.getElementById(
                        "confirmationModal",
                    ) as any;
                    if (!confirmationModal) {
                        console.error("Confirmation modal not found");
                        return;
                    }

                    confirmationModal.show({
                        title: "Permanently Delete Category",
                        message: `Are you sure you want to permanently delete "${categoryName}"? This action cannot be undone and will remove this category from all transactions and subcategories.`,
                        confirmLabel: "Purge",
                        cancelLabel: "Cancel",
                        onConfirm: async () => {
                            const csrfInput = document.querySelector(
                                'input[name="_csrf_token"]',
                            ) as HTMLInputElement;

                            const formData = new FormData(
                                form as HTMLFormElement,
                            );

                            if (csrfInput && csrfInput.value) {
                                // Ensure the CSRF field is included/overwritten
                                formData.set("_csrf_token", csrfInput.value);
                            }

                            const { ToastService } = await import(
                                "@lib/toast.ts"
                            );

                            try {
                                const { actions } = await import(
                                    "astro:actions"
                                );
                                const result =
                                    await actions.purgeCategory(formData);

                                if (result.data?.ok) {
                                    ToastService.success(
                                        "Category permanently deleted!",
                                    );
                                    // Reload the page to show updated data
                                    window.location.reload();
                                } else {
                                    ToastService.error(
                                        result.data?.error ||
                                            "Failed to permanently delete category",
                                    );
                                    console.error(
                                        "Category purge failed:",
                                        result.error || result.data?.error,
                                    );
                                }
                            } catch (error) {
                                ToastService.error(
                                    "An error occurred. Please try again.",
                                );
                                console.error("Error purging category:", error);
                            }
                        },
                    });
                });
            });
        });
    </script>
</Layout>
