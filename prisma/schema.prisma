generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Family {
  id        Int     @id @default(autoincrement())
  name      String
  createdAt String // YYYY-MM-DD HH:mm:ss
  updatedAt String // YYYY-MM-DD HH:mm:ss
  deletedAt String? // YYYY-MM-DD HH:mm:ss

  // Relations
  users      User[]
  accounts   Account[]
  categories Category[]
  tags       Tag[]
}

enum UserRole {
  Admin
  Member
}

model User {
  id           Int      @id @default(autoincrement())
  familyId     Int?
  username     String
  email        String   @unique
  passwordHash String
  role         UserRole @default(Member)
  lastLogin    String?  // YYYY-MM-DD HH:mm:ss
  createdAt    String // YYYY-MM-DD HH:mm:ss
  updatedAt    String // YYYY-MM-DD HH:mm:ss
  deletedAt    String? // YYYY-MM-DD HH:mm:ss

  // Relations
  family                Family?                @relation(fields: [familyId], references: [id])
  transactions          Transaction[]
  recurringTransactions RecurringTransaction[]

  @@index([familyId])
}

enum AccountType {
  Cash
  Checking
  Savings
  CreditCard
  Investment
  Loan
}

model Account {
  id          Int         @id @default(autoincrement())
  familyId    Int
  name        String
  accountType AccountType
  balance     Float       @default(0.0)
  color       String      @default("#6172F3")
  createdAt   String // YYYY-MM-DD HH:mm:ss
  updatedAt   String // YYYY-MM-DD HH:mm:ss
  deletedAt   String? // YYYY-MM-DD HH:mm:ss

  // Relations
  family                Family                 @relation(fields: [familyId], references: [id])
  accountBalances       AccountBalance[]
  transactions          Transaction[]
  recurringTransactions RecurringTransaction[]

  @@index([familyId])
  @@index([accountType])
}

model AccountBalance {
  id          Int     @id @default(autoincrement())
  accountId   Int
  date        String // YYYY-MM-DD (date only)
  balance     Float
  cashBalance Float   @default(0.0)
  createdAt   String // YYYY-MM-DD HH:mm:ss
  updatedAt   String // YYYY-MM-DD HH:mm:ss
  deletedAt   String? // YYYY-MM-DD HH:mm:ss

  // Relations
  account Account @relation(fields: [accountId], references: [id])

  @@unique([accountId, date])
  @@index([accountId, date(sort: Desc)])
}

model Category {
  id        Int     @id @default(autoincrement())
  familyId  Int
  name      String
  color     String  @default("#6172F3")
  parentId  Int?
  createdAt String // YYYY-MM-DD HH:mm:ss
  updatedAt String // YYYY-MM-DD HH:mm:ss
  deletedAt String? // YYYY-MM-DD HH:mm:ss

  // Relations
  family                Family                 @relation(fields: [familyId], references: [id])
  parent                Category?              @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  children              Category[]             @relation("CategoryToSubcategory")
  transactions          Transaction[]
  recurringTransactions RecurringTransaction[]

  @@index([familyId])
  @@index([parentId])
}

model Tag {
  id        Int     @id @default(autoincrement())
  familyId  Int
  name      String
  color     String  @default("#e99537")
  createdAt String // YYYY-MM-DD HH:mm:ss
  updatedAt String // YYYY-MM-DD HH:mm:ss
  deletedAt String? // YYYY-MM-DD HH:mm:ss

  // Relations
  family                Family                 @relation(fields: [familyId], references: [id])
  transactions          Transaction[]          @relation("TransactionToTag")
  recurringTransactions RecurringTransaction[] @relation("RecurringTransactionToTag")

  @@index([familyId])
}

enum TransactionType {
  Income
  Expense
  InvestmentBuy
  InvestmentSell
  LoanPayment
  LoanRepayment
}

model Transaction {
  id         Int             @id @default(autoincrement())
  accountId  Int
  userId     Int
  categoryId Int?
  date       String // YYYY-MM-DD HH:mm:ss
  name       String
  amount     Float
  type       TransactionType
  createdAt  String // YYYY-MM-DD HH:mm:ss
  updatedAt  String // YYYY-MM-DD HH:mm:ss
  deletedAt  String? // YYYY-MM-DD HH:mm:ss

  // Relations
  account      Account                  @relation(fields: [accountId], references: [id])
  user         User                     @relation(fields: [userId], references: [id])
  category     Category?                @relation(fields: [categoryId], references: [id])
  tags         Tag[]                    @relation("TransactionToTag")
  recurringLog RecurringTransactionLog? @relation("GeneratedTransaction")

  @@index([accountId, date(sort: Desc)])
  @@index([userId])
  @@index([categoryId])
  @@index([type])
  @@index([deletedAt])
}

enum Frequency {
  Daily
  Weekly
  Monthly
  Yearly
}

model RecurringTransaction {
  id               Int             @id @default(autoincrement())
  accountId        Int
  userId           Int
  categoryId       Int?
  description      String
  amount           Float
  type             TransactionType
  frequency        Frequency
  month            Int? // yearly frequency
  dayOfMonth       Int? // monthly and yearly frequency
  dayOfWeek        Int? // 0 (sunday) a 6 (saturday) weekly frequency
  timeOfDay        String? // HH:mm:ss
  startDate        String // YYYY-MM-DD HH:mm:ss
  endDate          String? // YYYY-MM-DD HH:mm:ss
  maxOccurrences   Int?
  occurrencesCount Int             @default(0)
  createdAt        String // YYYY-MM-DD HH:mm:ss
  updatedAt        String // YYYY-MM-DD HH:mm:ss
  deletedAt        String? // YYYY-MM-DD HH:mm:ss

  // Relations
  account  Account                   @relation(fields: [accountId], references: [id])
  user     User                      @relation(fields: [userId], references: [id])
  category Category?                 @relation(fields: [categoryId], references: [id])
  tags     Tag[]                     @relation("RecurringTransactionToTag")
  logs     RecurringTransactionLog[]

  @@index([accountId])
  @@index([userId])
  @@index([type])
}

model RecurringTransactionLog {
  id                     Int    @id @default(autoincrement())
  recurringTransactionId Int
  generatedTransactionId Int?   @unique
  executionTime          String // YYYY-MM-DD HH:mm:ss
  createdAt              String // YYYY-MM-DD HH:mm:ss
  updatedAt              String // YYYY-MM-DD HH:mm:ss

  // Relations
  recurringTransaction RecurringTransaction @relation(fields: [recurringTransactionId], references: [id])
  generatedTransaction Transaction?         @relation("GeneratedTransaction", fields: [generatedTransactionId], references: [id])

  @@index([recurringTransactionId])
  @@index([generatedTransactionId])
}
